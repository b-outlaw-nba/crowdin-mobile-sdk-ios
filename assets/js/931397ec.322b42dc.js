"use strict";(self.webpackChunk_crowdin_mobile_sdk_ios_website=self.webpackChunk_crowdin_mobile_sdk_ios_website||[]).push([[887],{5162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294),r=n(6010);const o={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,i),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>v});var a=n(7462),r=n(7294),o=n(6010),i=n(2466),l=n(6550),s=n(1980),u=n(7392),d=n(12);function c(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=p(e),[i,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[s,u]=g({queryString:n,groupId:a}),[c,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,d.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),f=(()=>{const e=s??c;return m({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{f&&l(f)}),[f]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),h(e)}),[u,h,o]),tabValues:o}}var f=n(2389);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:u}=e;const d=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.o5)(),p=e=>{const t=e.currentTarget,n=d.indexOf(t),a=u[n].value;a!==l&&(c(t),s(a))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=d.indexOf(e.currentTarget)+1;t=d[n]??d[0];break}case"ArrowLeft":{const n=d.indexOf(e.currentTarget)-1;t=d[n]??d[d.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>d.push(e),onKeyDown:m,onClick:p},i,{className:(0,o.Z)("tabs__item",k.tabItem,i?.className,{"tabs__item--active":l===t})}),n??t)})))}function w(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function C(e){const t=h(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",k.tabList)},r.createElement(b,(0,a.Z)({},e,t)),r.createElement(w,(0,a.Z)({},e,t)))}function v(e){const t=(0,f.Z)();return r.createElement(C,(0,a.Z)({key:String(t)},e))}},8944:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>m,default:()=>w,frontMatter:()=>p,metadata:()=>g,toc:()=>f});var a=n(7462),r=(n(7294),n(3905)),o=n(4866),i=n(5162),l=n(614),s=n(8668),u=n(8568),d=n(3069),c=n(2181);const p={},m="Screenshots",g={unversionedId:"advanced-features/screenshots",id:"advanced-features/screenshots",title:"Screenshots",description:"Enable this option if you want all screenshots taken in the application to be automatically sent to your Crowdin project with tagged strings. This provides additional context for translators.",source:"@site/docs/advanced-features/screenshots.mdx",sourceDirName:"advanced-features",slug:"/advanced-features/screenshots",permalink:"/mobile-sdk-ios/advanced-features/screenshots",draft:!1,editUrl:"https://github.com/crowdin/mobile-sdk-ios/tree/master/website/docs/advanced-features/screenshots.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Real-Time Preview",permalink:"/mobile-sdk-ios/advanced-features/real-time-preview"},next:{title:"SDK Controls",permalink:"/mobile-sdk-ios/advanced-features/sdk-controls"}},h={},f=[{value:"Setup",id:"setup",level:2},{value:"Swift",id:"swift",level:3},{value:"Objective-C",id:"objective-c",level:3},{value:"Authorization",id:"authorization",level:3},{value:"Own handler",id:"own-handler",level:3},{value:"Config options",id:"config-options",level:2}],k={toc:f},b="wrapper";function w(e){let{components:t,...n}=e;return(0,r.kt)(b,(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"screenshots"},"Screenshots"),(0,r.kt)("p",null,"Enable this option if you want all screenshots taken in the application to be automatically sent to your Crowdin project with tagged strings. This provides additional context for translators."),(0,r.kt)("h2",{id:"setup"},"Setup"),(0,r.kt)("h3",{id:"swift"},"Swift"),(0,r.kt)("p",null,"Add the code below to your ",(0,r.kt)("em",{parentName:"p"},"Podfile"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift",metastring:'title="Podfile"',title:'"Podfile"'},"use_frameworks!\ntarget 'your-app' do\n    pod 'CrowdinSDK'\n    pod 'CrowdinSDK/LoginFeature' // Required for Screenshots\n    pod 'CrowdinSDK/Screenshots' // Required for Screenshots\n    pod 'CrowdinSDK/Settings' // Optional. To add 'settings' button\nend\n")),(0,r.kt)("p",null,"Open ",(0,r.kt)("em",{parentName:"p"},"AppDelegate.swift")," file and in the ",(0,r.kt)("inlineCode",{parentName:"p"},"application")," method add:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift",metastring:'title="AppDelegate.swift"',title:'"AppDelegate.swift"'},'let crowdinProviderConfig = CrowdinProviderConfig(hashString: "{your_distribution_hash}",\n    sourceLanguage: "{source_language}",\n    organizationName: "{organization_name}")\n\nvar loginConfig: CrowdinLoginConfig\ndo {\n   loginConfig = try CrowdinLoginConfig(clientId: "{client_id}",\n       clientSecret: "{client_secret}",\n       scope: "project.screenshot",\n       redirectURI: "{redirectURI}")\n} catch {\n    print(error)\n    // CrowdinLoginConfig initialization error handling, typically for empty values and for wrong redirect URI value.\n}\n\nlet crowdinSDKConfig = CrowdinSDKConfig.config().with(crowdinProviderConfig: crowdinProviderConfig)\n    .with(screenshotsEnabled: true)\n    .with(loginConfig: loginConfig)\n    .with(settingsEnabled: true)\n\nCrowdinSDK.startWithConfig(crowdinSDKConfig, completion: {\n    // SDK is ready to use, put code to change language, etc. here\n})\n')),(0,r.kt)("h3",{id:"objective-c"},"Objective-C"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-objectivec"},'CrowdinProviderConfig *crowdinProviderConfig = [[CrowdinProviderConfig alloc] initWithHashString:@"" sourceLanguage:@"" organizationName:@"{organization_name}"];\n\nNSError *error;\nCrowdinLoginConfig *loginConfig = [[CrowdinLoginConfig alloc] initWithClientId:@"{client_id}" clientSecret:@"{client_secret}" scope:@"project.screenshot" error:&error];\n\nif (!error) {\n    CrowdinSDKConfig *config = [[[CrowdinSDKConfig config] withCrowdinProviderConfig:crowdinProviderConfig] withLoginConfig:loginConfig];\n\n    [CrowdinSDK startWithConfig:config completion:^{\n        // SDK is ready to use, put code to change language, etc. here\n    }];\n} else {\n    NSLog(@"%@", error.localizedDescription);\n    // CrowdinLoginConfig initialization error handling, typically for empty values and for wrong redirect URI value.\n}\n')),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"If you get the ",(0,r.kt)("inlineCode",{parentName:"p"},"Error while capturing screenshot - The operation couldn\u2019t be completed. (There are no localized strings detected on current screen. error 99999.)")," when sending screenshots, please make sure that your ",(0,r.kt)("strong",{parentName:"p"},"current locale")," is your project ",(0,r.kt)("strong",{parentName:"p"},"source (default) language"),".")),(0,r.kt)("h3",{id:"authorization"},"Authorization"),(0,r.kt)("p",null,"Crowdin Authorization is required for Screenshots feature. So you need to handle authorization callback in your application:"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"swift",label:"Swift",mdxType:"TabItem"},(0,r.kt)(l.Z,{language:"swift",mdxType:"CodeBlock"},s.Z)),(0,r.kt)(i.Z,{value:"obj-c",label:"Objective-C",mdxType:"TabItem"},(0,r.kt)(l.Z,{language:"objectivec",mdxType:"CodeBlock"},u.Z))),(0,r.kt)("p",null,"If you are using ",(0,r.kt)("strong",{parentName:"p"},"SceneDelegate"),", you need to handle callback in the ",(0,r.kt)("strong",{parentName:"p"},"SceneDelegate"),"  class implement method:"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"swift",label:"Swift",mdxType:"TabItem"},(0,r.kt)(l.Z,{language:"swift",mdxType:"CodeBlock"},d.Z)),(0,r.kt)(i.Z,{value:"obj-c",label:"Objective-C",mdxType:"TabItem"},(0,r.kt)(l.Z,{language:"objectivec",mdxType:"CodeBlock"},c.Z))),(0,r.kt)("h3",{id:"own-handler"},"Own handler"),(0,r.kt)("p",null,"You can also (optionally) define your own handler to take a screenshot (e.g. by clicking a button in your application):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'CrowdinSDK.captureScreenshot(name: String(Date().timeIntervalSince1970)) {\n    print("Screenshot captured")\n} errorHandler: { error in\n    print("Screenshot capture failed with error - " + error?.localizedDescription)\n}\n')),(0,r.kt)("p",null,"or even capture screenshots of a separate UIView."),(0,r.kt)("h2",{id:"config-options"},"Config options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Config option"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"hashString")),(0,r.kt)("td",{parentName:"tr",align:null},"Distribution Hash"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'hashString: "7a0c1....97uo3b"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"sourceLanguage")),(0,r.kt)("td",{parentName:"tr",align:null},"Your Crowdin project source language. ",(0,r.kt)("a",{parentName:"td",href:"http://www.loc.gov/standards/iso639-2/php/English_list.php"},"ISO 639-1")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'sourceLanguage: "en"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"clientId"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"clientSecret")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://support.crowdin.com/creating-oauth-app/"},"Crowdin OAuth")," Client ID and Client Secret"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'clientId: "gpY2yT...x3TYB"'),", ",(0,r.kt)("inlineCode",{parentName:"td"},'clientSecret: "Xz95t...EDx9T"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"scope")),(0,r.kt)("td",{parentName:"tr",align:null},"Define the access scope for personal tokens"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'scope: "project.screenshot"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"redirectURI")),(0,r.kt)("td",{parentName:"tr",align:null},"A custom URL for your app. Read more in the ",(0,r.kt)("a",{parentName:"td",href:"https://developer.apple.com/documentation/uikit/inter-process_communication/allowing_apps_and_websites_to_link_to_your_content/defining_a_custom_url_scheme_for_your_app"},"article"),". It's an optional value. You should set it in case you want to use a specific URL scheme. In case you set a scheme which is not supported by your application init method will throw an exception."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'redirectURI: "crowdintest://"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"organizationName")),(0,r.kt)("td",{parentName:"tr",align:null},"An Organization domain name (for ",(0,r.kt)("strong",{parentName:"td"},"Crowdin Enterprise users only"),")"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'organizationName: "mycompany"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"settingsEnabled")),(0,r.kt)("td",{parentName:"tr",align:null},"Enable ",(0,r.kt)("a",{parentName:"td",href:"/advanced-features/sdk-controls"},"SDK Controls")," to easily access the features of SDK"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"settingsEnabled: true"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"screenshotsEnabled")),(0,r.kt)("td",{parentName:"tr",align:null},"Enable Screenshots feature"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"screenshotsEnabled: true"))))),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"The Screenshots feature should not be used in a production environment. It is intended for use in development or staging only.")))}w.isMDXComponent=!0},8568:(e,t,n)=>{n.d(t,{Z:()=>a});const a="- (BOOL)application:(UIApplication *)app openURL:(NSURL *)url options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {\n    return [CrowdinSDK handleWithUrl:url];\n}"},8668:(e,t,n)=>{n.d(t,{Z:()=>a});const a="func application(_ app: UIApplication, open url: URL, options: [UIApplication.OpenURLOptionsKey: Any] = [:]) -> Bool {\n    CrowdinSDK.handle(url: url)\n}"},2181:(e,t,n)=>{n.d(t,{Z:()=>a});const a="- (void)scene:(UIScene *)scene openURLContexts:(NSSet<UIOpenURLContext *> *)URLContexts {\n    return [CrowdinSDK handleWithUrl:url];\n}"},3069:(e,t,n)=>{n.d(t,{Z:()=>a});const a="func scene(_ scene: UIScene, openURLContexts URLContexts: Set<UIOpenURLContext>) {\n    guard let url = URLContexts.first?.url else { return }\n    CrowdinSDK.handle(url: url)\n}"}}]);